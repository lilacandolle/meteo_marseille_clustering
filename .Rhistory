getwd()
# on fait en sorte que le wd soit bon aussi quand on exécute chunk by chunk
if (interactive()) {
setwd(rprojroot::find_rstudio_root_file())
}
getwd()
# on fait en sorte que le wd soit bon aussi quand on exécute chunk by chunk
if (interactive()) {
setwd(rprojroot::find_rstudio_root_file())
}
getwd()
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(openair)
library(foehnix)
library(metR)
library(ncdf4)
library(patchwork)
# paramètres pour l'exécution du code
savefig = TRUE
getwd()
# Météo France
df_mf <- read.csv("./data/raw/MeteoFrance/LCPMARVAL_20162025.csv", header = TRUE, sep = ",")
# on crée un dossier pour les figures si il n'existe pas
figpath = ("./outputs/figures/compaMARobsERA5/")
# ERA5
nc_windu_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windu.nc")
nc_windv_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windv.nc")
nc_t2m_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_t2m.nc")
nc_tp_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_totalprecipitation.nc")
# ERA5 land
nc_windu_era5land <- nc_open("./data/raw/ECMWF/ERA5land/windu_01062022.nc")
nc_windv_era5land <- nc_open("./data/raw/ECMWF/ERA5land/windv_01062022.nc")
nc_t2m_era5land <- nc_open("./data/raw/ECMWF/ERA5land/t2m_01062022.nc")
# Météo France
df_mf <- read.csv("./data/raw/MeteoFrance/LCPMARVAL_20162025.csv", header = TRUE, sep = ",")
# on crée un dossier pour les figures si il n'existe pas
figpath = ("./outputs/figures/compaMARobsERA5/")
# ERA5
nc_windu_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windu.nc")
nc_windv_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windv.nc")
nc_t2m_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_t2m.nc")
nc_tp_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_totalprecipitation.nc")
# ERA5 land
nc_windu_era5land <- nc_open("./data/raw/ECMWF/ERA5land/windu_01062022.nc")
nc_windv_era5land <- nc_open("./data/raw/ECMWF/ERA5land/windv_01062022.nc")
#nc_t2m_era5land <- nc_open("./data/raw/ECMWF/ERA5land/t2m_01062022.nc")
nc_windu_era5land_2 <- nc_open("./data/raw/ECMWF/ERA5land/windu_07122022.nc")
nc_windv_era5land_2 <- nc_open("./data/raw/ECMWF/ERA5land/windv_07122022.nc")
#nc_t2m_era5land_2 <- nc_open("./data/raw/ECMWF/ERA5land/t2m_07122022.nc")
# puis on les assemble parce qu'ils comportent les mêmes variables mais à des moments différents
nc_windu_era5land <- ncvar_append(nc_windu_era5land, nc_windu_era5land_2)
nc_windv_era5land <- ncvar_append(nc_windv_era5land, nc_windv_era5land_2)
#nc_t2m_era5land <- ncvar_append(nc_t2m_era5land, nc_t2m_era5land_2)
# Météo France
df_mf <- read.csv("./data/raw/MeteoFrance/LCPMARVAL_20162025.csv", header = TRUE, sep = ",")
# on crée un dossier pour les figures si il n'existe pas
figpath = ("./outputs/figures/compaMARobsERA5/")
# ERA5
nc_windu_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windu.nc")
nc_windv_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windv.nc")
nc_t2m_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_t2m.nc")
nc_tp_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_totalprecipitation.nc")
# ERA5 land
nc_windv_era5land <- nc_open("./data/raw/ECMWF/ERA5land/windv_2022.nc")
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(openair)
library(foehnix)
library(metR)
library(ncdf4)
library(patchwork)
# paramètres pour l'exécution du code
savefig = TRUE
getwd()
# Météo France
df_mf <- read.csv("./data/raw/MeteoFrance/LCPMARVAL_20162025.csv", header = TRUE, sep = ",")
# on crée un dossier pour les figures si il n'existe pas
figpath = ("./outputs/figures/compaMARobsERA5/")
# ERA5
nc_windu_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windu.nc")
nc_windv_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windv.nc")
nc_t2m_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_t2m.nc")
nc_tp_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_totalprecipitation.nc")
# ERA5 land
nc_windv_era5land <- nc_open("./data/raw/ECMWF/ERA5land/windv_2022.nc")
# Météo France
df_mf <- read.csv("./data/raw/MeteoFrance/LCPMARVAL_20162025.csv", header = TRUE, sep = ",")
# on crée un dossier pour les figures si il n'existe pas
figpath = ("./outputs/figures/compaMARobsERA5/")
# ERA5
nc_windu_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windu.nc")
nc_windv_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windv.nc")
nc_t2m_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_t2m.nc")
nc_tp_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_totalprecipitation.nc")
# ERA5 land
nc_windv_era5land <- nc_open("./data/raw/ECMWF/ERA5land/windv_2022.nc")
View(nc_windv_era5)
View(nc_windv_era5)
View(nc_windu_era5land)
View(nc_windu_era5land)
# Météo France
df_mf <- read.csv("./data/raw/MeteoFrance/LCPMARVAL_20162025.csv", header = TRUE, sep = ",")
# on crée un dossier pour les figures si il n'existe pas
figpath = ("./outputs/figures/compaMARobsERA5/")
# ERA5
nc_windu_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windu.nc")
nc_windv_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windv.nc")
nc_t2m_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_t2m.nc")
nc_tp_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_totalprecipitation.nc")
# ERA5 land
nc_windv_era5land <- nc_open("./data/raw/ECMWF/ERA5land/windv_2022.nc")
# min et max de la dim valid_time pour era5land
min_valid_time_era5land <- min(ncvar_get(nc_windv_era5land, "valid_time"))
max_valid_time_era5land <- max(ncvar_get(nc_windv_era5land, "valid_time"))
# en posixct deopuis secondes depuis 1970
min_valid_time_era5land <- as.POSIXct(min_valid_time_era5land, origin = "1970-01-01", tz = "UTC")
max_valid_time_era5land <- as.POSIXct(max_valid_time_era5land, origin = "1970-01-01", tz = "UTC")
# créatrion d'un dataframe avec les deux
# dans df_mf, on sélectionnne MAR
df_mf$DateTime <- as.POSIXct(strptime(as.character(df_mf$AAAAMMJJHH), format = "%Y%m%d%H"), tz = "UTC")
# on fait en sorte que le wd soit bon aussi quand on exécute chunk by chunk
if (interactive()) {
setwd(rprojroot::find_rstudio_root_file())
}
getwd()
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(openair)
library(foehnix)
library(metR)
library(ncdf4)
library(patchwork)
# paramètres pour l'exécution du code
savefig = TRUE
getwd()
# Météo France
df_mf <- read.csv("./data/raw/MeteoFrance/LCPMARVAL_20162025.csv", header = TRUE, sep = ",")
# on crée un dossier pour les figures si il n'existe pas
figpath = ("./outputs/figures/compaMARobsERA5/")
# ERA5
nc_windu_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windu.nc")
nc_windv_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windv.nc")
nc_t2m_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_t2m.nc")
nc_tp_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_totalprecipitation.nc")
# ERA5 land
nc_windu_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windu_2022.nc")
nc_windv_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windv_2022.nc")
nc_t2m_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/t2m_2022.nc")
nc_ssrd_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/ssrd_2022.nc")
# créatrion d'un dataframe avec les deux
# dans df_mf, on sélectionnne MAR
df_mf$DateTime <- as.POSIXct(strptime(as.character(df_mf$AAAAMMJJHH), format = "%Y%m%d%H"), tz = "UTC")
df <- df_mf %>%
filter(NUM_POSTE == 13054001)%>%
select(DateTime, FF, DD, T, RR1)
# on prend que 2022 et 2023 pour df
df <- df %>%
filter(DateTime >= as.POSIXct("2022-01-01") & DateTime < as.POSIXct("2024-01-01"))
time <- ncvar_get(nc_windu_era5, "valid_time")
# Définir la date de début (1970) pour la conversion de l'heure en date
start_date <- as.POSIXct("1970-01-01 00:00:00", tz = "UTC")
date <- start_date + time
# Définir la date limite (début 2025) car quand on télécharge les données pour l'année en cours, la date de fin diffère
end_date <- as.POSIXct("2025-01-01 00:00:00", tz = "UTC")
# Filtrer les données jusqu'à cette date
valid_indices <- which(date <= end_date)
date <- date[valid_indices]
df_era5 <- data.frame(
date = ncvar_get(nc_windu_era5, "valid_time")[valid_indices],
windu_era5 = ncvar_get(nc_windu_era5, "u10")[valid_indices],
windv_era5 = ncvar_get(nc_windv_era5, "v10")[valid_indices],
t2m_era5 = ncvar_get(nc_t2m_era5, "t2m")[valid_indices],
tp_era5 = ncvar_get(nc_tp_era5, "tp")[valid_indices]
)
df_era5land <- data.frame(
date = ncvar_get(nc_windu_era5_land, "valid_time"),
windu_era5_land = ncvar_get(nc_windu_era5_land, "u10"),
windv_era5_land = ncvar_get(nc_windv_era5_land, "v10"),
t2m_era5_land = ncvar_get(nc_t2m_era5_land, "t2m"),
ssrd_era5_land = ncvar_get(nc_ssrd_era5_land, "ssrd")
)
rm(nc_windu_era5, nc_windv_era5, nc_t2m_era5, nc_tp_era5, time, start_date, end_date, valid_indices)
df_era5$t2m_era5 <- df_era5$t2m_era5 - 273.15  # conversion de Kelvin à Celsius
# on transforme date de secondes en POSIXct
df_era5$date <- as.POSIXct(df_era5$date, origin = "1970-01-01", tz = "UTC")
df_era5 <- df_era5 %>%
filter(date >= as.POSIXct("2022-01-01") & date < as.POSIXct("2024-01-01"))
df$windu_era5 <- df_era5$windu_era5[match(df$DateTime, df_era5$date)]
df$windv_era5 <- df_era5$windv_era5[match(df$DateTime, df_era5$date)]
df$t2m_era5 <- df_era5$t2m_era5[match(df$DateTime, df_era5$date)]
df$tp_era5 <- df_era5$tp_era5[match(df$DateTime, df_era5$date)]
ddff <- uv2ddff(df$windu_era5, df$windv_era5)
df$DD_era5 <- ddff$dd
df$FF_era5 <- ddff$ff
uv <- ddff2uv(df$DD, df$FF)
df$windu_mf <- uv$u
df$windv_mf <- uv$v
# plot as Menut
# on sélectionne trois jours ou plus dans le df
df_3j <- df %>%
filter(DateTime > as.POSIXct("2023-02-17") & DateTime < as.POSIXct("2023-02-21"))
# on crée une colonne avec les heures dsepuis le début du df
df_3j$heures <- as.numeric(difftime(df_3j$DateTime, min(df_3j$DateTime), units = "hours"))
breaks_major <- seq(0, max(df_3j$heures), by = 24)
breaks_minor <- seq(0, max(df_3j$heures), by = 6)
xlim_common <- range(df_3j$heures, na.rm = TRUE)
xlim_common <- c(xlim_common[1] - 1, xlim_common[2] + 4)  # ajoute 3h de marge A MODIFIER SI ERREUR GENRE OUTSIDE THE SCALE RANGE
a <- ggplot(df_3j, aes(x = heures, y = 0)) +
geom_point() +
geom_segment(aes(xend = heures + windu_mf, yend = windv_mf), y = 0, arrow = arrow()) +
scale_x_continuous(
name = NULL,
limits = xlim_common,
breaks = breaks_major,
minor_breaks = breaks_minor,
labels = NULL
) +
coord_fixed() +
theme_minimal() +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
b <- ggplot(df_3j, aes(x = heures, y = 0)) +
geom_point() +
geom_segment(aes(xend = heures + windu_era5, yend = windv_era5), y = 0, arrow = arrow()) +
scale_x_continuous(
name = NULL,
limits = xlim_common,
breaks = breaks_major,
minor_breaks = breaks_minor,
labels = function(x) format(min(df_3j$DateTime) + x * 3600,  "%Y-%m-%d %H:%M")
) +
coord_fixed() +
theme_minimal() +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
a / b
summary(df_3j$windu_mf)
summary(df_3j$windu_era5)
summary(df_3j$windv_mf)
summary(df_3j$windv_era5)
rmse_ff <- sqrt(mean((df$FF - df$FF_era5)^2, na.rm = TRUE))
print(paste("RMSE FF:", round(rmse_ff, 2)))
bias_ff <- mean(df$FF - df$FF_era5, na.rm = TRUE)
print(paste("Bias FF:", round(bias_ff, 2)))
rmse_t <- sqrt(mean((df$T - df$t2m_era5)^2, na.rm = TRUE))
print(paste("RMSE T:", round(rmse_t, 2)))
bias_t <- mean(df$T - df$t2m_era5, na.rm = TRUE)
print(paste("Bias T:", round(bias_t, 2)))
# ça marche pas pour l'instant
#count le nb de jours de pluie pour RR1 et tp sachant que mes données sont horaire du coup summarize par jour (DateTime est en posixct)
df$Date <- as.Date(df$DateTime)
df_pluie <- df %>%
group_by(Date) %>%
summarize(
pluie_mf = sum(RR1 > 0, na.rm = TRUE),
pluie_era5 = sum(tp_era5 > 0, na.rm = TRUE)
)
View(df_era5land)
View(df_era5land)
# Météo France
df_mf <- read.csv("./data/raw/MeteoFrance/LCPMARVAL_20162025.csv", header = TRUE, sep = ",")
# on crée un dossier pour les figures si il n'existe pas
figpath = ("./outputs/figures/compaMARobsERA5/")
# ERA5
nc_windu_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windu.nc")
nc_windv_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windv.nc")
nc_t2m_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_t2m.nc")
nc_tp_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_totalprecipitation.nc")
# ERA5 land
nc_windu_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windu_2022.nc")
nc_windv_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windv_2022.nc")
nc_t2m_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/t2m_2022.nc")
nc_ssrd_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/ssrd_2022.nc")
# on fait en sorte que le wd soit bon aussi quand on exécute chunk by chunk
if (interactive()) {
setwd(rprojroot::find_rstudio_root_file())
}
getwd()
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(openair)
library(foehnix)
library(metR)
library(ncdf4)
library(patchwork)
# paramètres pour l'exécution du code
savefig = TRUE
getwd()
# Météo France
df_mf <- read.csv("./data/raw/MeteoFrance/LCPMARVAL_20162025.csv", header = TRUE, sep = ",")
# on crée un dossier pour les figures si il n'existe pas
figpath = ("./outputs/figures/compaMARobsERA5/")
# ERA5
nc_windu_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windu.nc")
nc_windv_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windv.nc")
nc_t2m_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_t2m.nc")
nc_tp_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_totalprecipitation.nc")
# ERA5 land
nc_windu_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windu_2022.nc")
nc_windv_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windv_2022.nc")
nc_t2m_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/t2m_2022.nc")
nc_ssrd_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/ssrd_2022.nc")
View(nc_t2m_era5)
View(nc_ssrd_era5_land)
# créatrion d'un dataframe avec les deux
# dans df_mf, on sélectionnne MAR
df_mf$DateTime <- as.POSIXct(strptime(as.character(df_mf$AAAAMMJJHH), format = "%Y%m%d%H"), tz = "UTC")
df <- df_mf %>%
filter(NUM_POSTE == 13054001)%>%
select(DateTime, FF, DD, T, RR1)
# on prend que 2022 et 2023 pour df
df <- df %>%
filter(DateTime >= as.POSIXct("2022-01-01") & DateTime < as.POSIXct("2024-01-01"))
time <- ncvar_get(nc_windu_era5, "valid_time")
# Définir la date de début (1970) pour la conversion de l'heure en date
start_date <- as.POSIXct("1970-01-01 00:00:00", tz = "UTC")
date <- start_date + time
# Définir la date limite (début 2025) car quand on télécharge les données pour l'année en cours, la date de fin diffère
end_date <- as.POSIXct("2025-01-01 00:00:00", tz = "UTC")
# Filtrer les données jusqu'à cette date
valid_indices <- which(date <= end_date)
date <- date[valid_indices]
df_era5 <- data.frame(
date = ncvar_get(nc_windu_era5, "valid_time")[valid_indices],
windu_era5 = ncvar_get(nc_windu_era5, "u10")[valid_indices],
windv_era5 = ncvar_get(nc_windv_era5, "v10")[valid_indices],
t2m_era5 = ncvar_get(nc_t2m_era5, "t2m")[valid_indices],
tp_era5 = ncvar_get(nc_tp_era5, "tp")[valid_indices]
)
df_era5land <- data.frame(
date = ncvar_get(nc_windu_era5_land, "valid_time"),
windu_era5_land = ncvar_get(nc_windu_era5_land, "u10"),
windv_era5_land = ncvar_get(nc_windv_era5_land, "v10"),
t2m_era5_land = ncvar_get(nc_t2m_era5_land, "t2m"),
ssrd_era5_land = ncvar_get(nc_ssrd_era5_land, "ssrd")
)
rm(nc_windu_era5, nc_windv_era5, nc_t2m_era5, nc_tp_era5, time, start_date, end_date, valid_indices)
df_era5$t2m_era5 <- df_era5$t2m_era5 - 273.15  # conversion de Kelvin à Celsius
# on transforme date de secondes en POSIXct
df_era5$date <- as.POSIXct(df_era5$date, origin = "1970-01-01", tz = "UTC")
df_era5 <- df_era5 %>%
filter(date >= as.POSIXct("2022-01-01") & date < as.POSIXct("2024-01-01"))
df$windu_era5 <- df_era5$windu_era5[match(df$DateTime, df_era5$date)]
df$windv_era5 <- df_era5$windv_era5[match(df$DateTime, df_era5$date)]
df$t2m_era5 <- df_era5$t2m_era5[match(df$DateTime, df_era5$date)]
df$tp_era5 <- df_era5$tp_era5[match(df$DateTime, df_era5$date)]
ddff <- uv2ddff(df$windu_era5, df$windv_era5)
df$DD_era5 <- ddff$dd
df$FF_era5 <- ddff$ff
uv <- ddff2uv(df$DD, df$FF)
df$windu_mf <- uv$u
df$windv_mf <- uv$v
View(df_era5land)
View(df_era5land)
View(df_era5land)
View(df_era5land)
View(nc_t2m_era5_land)
View(nc_t2m_era5_land)
# Météo France
df_mf <- read.csv("./data/raw/MeteoFrance/LCPMARVAL_20162025.csv", header = TRUE, sep = ",")
# on crée un dossier pour les figures si il n'existe pas
figpath = ("./outputs/figures/compaMARobsERA5/")
# ERA5
nc_windu_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windu.nc")
nc_windv_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windv.nc")
nc_t2m_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_t2m.nc")
nc_tp_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_totalprecipitation.nc")
# ERA5 land
nc_windu_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windu_2022.nc")
nc_windv_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windv_2022.nc")
nc_t2m_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/t2m_2022.nc")
nc_ssrd_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/ssrd_2022.nc")
# on prend que le point pour era5land de coords 43.4, 5.0
nc_windu_era5_land <- ncvar_subset(nc_windu_era5_land, "u10", longitude = 5.0, latitude = 43.4)
# Météo France
df_mf <- read.csv("./data/raw/MeteoFrance/LCPMARVAL_20162025.csv", header = TRUE, sep = ",")
# on crée un dossier pour les figures si il n'existe pas
figpath = ("./outputs/figures/compaMARobsERA5/")
# ERA5
nc_windu_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windu.nc")
nc_windv_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windv.nc")
nc_t2m_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_t2m.nc")
nc_tp_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_totalprecipitation.nc")
# ERA5 land
nc_windu_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windu_2022.nc")
nc_windv_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windv_2022.nc")
nc_t2m_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/t2m_2022.nc")
nc_ssrd_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/ssrd_2022.nc")
# on prend que le point pour era5land de coords 43.4, 5.0
nc_windu_era5_land <- nc_windu_era5_land[which(nc_windu_era5_land$dim$latitude$vals == 43.4 & nc_windu_era5_land$dim$longitude$vals == 5.0), ]
# Météo France
df_mf <- read.csv("./data/raw/MeteoFrance/LCPMARVAL_20162025.csv", header = TRUE, sep = ",")
# on crée un dossier pour les figures si il n'existe pas
figpath = ("./outputs/figures/compaMARobsERA5/")
# ERA5
nc_windu_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windu.nc")
nc_windv_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windv.nc")
nc_t2m_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_t2m.nc")
nc_tp_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_totalprecipitation.nc")
# ERA5 land
nc_windu_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windu_2022.nc")
nc_windv_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windv_2022.nc")
nc_t2m_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/t2m_2022.nc")
nc_ssrd_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/ssrd_2022.nc")
# on prend que le point pour era5land de coords 43.4, 5.0
nc_windu_era5_land <- nc_windu_era5_land[which(nc_windu_era5_land$dim$latitude$vals == 43.0 & nc_windu_era5_land$dim$longitude$vals == 5.0), ]
str(nc_windu_era5_land)
# Météo France
df_mf <- read.csv("./data/raw/MeteoFrance/LCPMARVAL_20162025.csv", header = TRUE, sep = ",")
# on crée un dossier pour les figures si il n'existe pas
figpath = ("./outputs/figures/compaMARobsERA5/")
# ERA5
nc_windu_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windu.nc")
nc_windv_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5windv.nc")
nc_t2m_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_t2m.nc")
nc_tp_era5 <- nc_open("./data/raw/ECMWF/MARforcomparison/20222023_MARcoords_ERA5_totalprecipitation.nc")
# ERA5 land
nc_windu_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windu_2022.nc")
nc_windv_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windv_2022.nc")
nc_t2m_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/t2m_2022.nc")
nc_ssrd_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/ssrd_2022.nc")
# on prend que le point pour era5land de coords 43.4, 5.0
nc_windu_era5_land <- nc_windu_era5_land[which(nc_windu_era5_land$dim$latitude$vals == 43.0 & nc_windu_era5_land$dim$longitude$vals == 5.0), ]
nc_windu_era5_land <- nc_open("./data/raw/ECMWF/ERA5land/windu_point.nc")
nc_windu_era5_land <- nc_open("E:\_stageCO2\data\ECMWF\ERA5land\windu_point.nc")
nc_windu_era5_land <- nc_open("E:\\_stageCO2\\data\\ECMWF\\ERA5land\\windu_point.nc")
View(nc_windu_era5)
View(nc_windu_era5)
View(nc_windu_era5_land)
View(nc_windu_era5_land)
install.packages("stars")
git status
if (windows) {
dataset_CO2 <- get(load("E:/_stageCO2/data/CO2/données CO2 par minutes (2016-2022) corrigées calibrées/dataset_CAV_cal_min_NF.RData"))
figpathCO2 = "E:/_stageCO2/figures/co2"
} else {
dataset_CO2 <- get(load("/Volumes/T7_Shield/_stageCO2/data/CO2/données CO2 par minutes (2016-2022) corrigées calibrées/dataset_CAV_cal_min_NF.RData"))
figpathCO2 = "/Volumes/T7_Shield/_stageCO2/figures/co2"
}
windows = TRUE
if (windows) {
dataset_CO2 <- get(load("E:/_stageCO2/data/CO2/données CO2 par minutes (2016-2022) corrigées calibrées/dataset_CAV_cal_min_NF.RData"))
figpathCO2 = "E:/_stageCO2/figures/co2"
} else {
dataset_CO2 <- get(load("/Volumes/T7_Shield/_stageCO2/data/CO2/données CO2 par minutes (2016-2022) corrigées calibrées/dataset_CAV_cal_min_NF.RData"))
figpathCO2 = "/Volumes/T7_Shield/_stageCO2/figures/co2"
}
View(dataset_CO2)
View(dataset_CO2)
# on charge les fichiers RDS
readRDS("./data/processed/ERA5_dataset.rds")
# on charge les fichiers RDS
dataset <- readRDS("./data/processed/ERA5_dataset.rds")
# on ouvre le nc
nc <- "../meteo_marseille_clustering/data/raw/ECMWF/ERA5land/t2m_20162022.nc"
# on extrait les données pour Marseille
lcp_data <- extract_point_fromcoords(nc, "t2m", 43.25, 5.35)
# Function to select a point into the netcdf file, according to latitude and longitude
extract_point_fromcoords <- function(ncfile, varname, target_lat, target_lon) {
# Ouvrir le fichier NetCDF
nc <- nc_open(ncfile)
on.exit(nc_close(nc))  # S'assure de fermer le fichier en sortant
# Lire les coordonnées
lats <- ncvar_get(nc, "latitude")
lons <- ncvar_get(nc, "longitude")
# Trouver l'indice du point le plus proche
lat_index <- which.min(abs(lats - target_lat))
lon_index <- which.min(abs(lons - target_lon))
# Lire la variable
var_dims <- ncvar_get(nc, varname,
start = c(lon_index, lat_index, 1),
count = c(1, 1, -1))  # -1 = toute la dimension "time"
# Lire le temps (facultatif mais souvent utile)
time <- ncvar_get(nc, "valid_time")
# Retourner un data.frame avec le temps et les valeurs
return(data.frame(time = time, value = as.vector(var_dims)))
}
# on ouvre le nc
nc <- "../meteo_marseille_clustering/data/raw/ECMWF/ERA5land/t2m_20162022.nc"
# on extrait les données pour Marseille
lcp_data <- extract_point_fromcoords(nc, "t2m", 43.25, 5.35)
# Load necessary libraries
library(ncdf4)
library(stars)
# on ouvre le nc
nc <- "../meteo_marseille_clustering/data/raw/ECMWF/ERA5land/t2m_20162022.nc"
# on extrait les données pour Marseille
lcp_data <- extract_point_fromcoords(nc, "t2m", 43.25, 5.35)
View(lcp_data)
View(lcp_data)
# on ouvre le nc
nc <- "../meteo_marseille_clustering/data/raw/ECMWF/ERA5land/t2m_20162022.nc"
# on extrait les données pour Marseille
lcp_data <- extract_point_fromcoords(nc, "t2m", 43.25, 5.35)
val_data <- extract_point_fromcoords(nc, "t2m", 43.25, 5.45)
View(lcp_data)
View(val_data)
