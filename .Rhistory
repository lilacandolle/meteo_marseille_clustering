geom_histogram(binwidth = 0.5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution de la vitesse du vent moyenne par jour",
x = "Vitesse du vent (m/s)",
y = "Nombre de jours") +
scale_x_continuous(breaks = seq(0, 20, by = 2)) +
theme_minimal()
b <- ggplot(df_vent_faible, aes(x = mean_ws_matin)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution de la vitesse du vent moyenne le matin",
x = "Vitesse du vent (m/s)",
y = "Nombre de jours") +
scale_x_continuous(breaks = seq(0, 20, by = 2)) +
theme_minimal()
c <- ggplot(df_vent_faible, aes(x = mean_ws_soir)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution de la vitesse du vent moyenne le soir",
x = "Vitesse du vent (m/s)",
y = "Nombre de jours") +
scale_x_continuous(breaks = seq(0, 20, by = 2)) +
theme_minimal()
print(a)
print(b)
print(c)
a/b
# on moyenne le vent par jour sur toutes les heures y compris celles pour lesquelles y a un flag puis pour les heures pour lesquelles flag_dn == "matin" ou "soir" et on met tout ça dans un df
df_vent_faible <- df_meteoCO2 %>%
group_by(date = as.Date(date)) %>%
summarise(mean_ws = mean(ws, na.rm = TRUE), .groups = "drop")
df_vent_faible_matin <- df_meteoCO2 %>%
filter(flag_dn == "matin") %>%
group_by(date = as.Date(date)) %>%
summarise(mean_ws_matin = mean(ws, na.rm = TRUE), .groups = "drop")
df_vent_faible_soir <- df_meteoCO2 %>%
filter(flag_dn == "soir") %>%
group_by(date = as.Date(date)) %>%
summarise(mean_ws_soir = mean(ws, na.rm = TRUE), .groups = "drop")
df_vent_faible <- df_vent_faible %>%
left_join(df_vent_faible_matin, by = "date") %>%
left_join(df_vent_faible_soir, by = "date")
rm(df_vent_faible_matin, df_vent_faible_soir) # on supprime les df intermédiaires
# histogramme simple
a <- ggplot(df_vent_faible, aes(x = mean_ws)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution de la vitesse du vent moyenne par jour",
x = "Vitesse du vent (m/s)",
y = "Nombre de jours") +
scale_x_continuous(breaks = seq(0, 20, by = 2)) +
theme_minimal()
b <- ggplot(df_vent_faible, aes(x = mean_ws_matin)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution de la vitesse du vent moyenne le matin",
x = "Vitesse du vent (m/s)",
y = "Nombre de jours") +
scale_x_continuous(breaks = seq(0, 20, by = 2)) +
theme_minimal()
c <- ggplot(df_vent_faible, aes(x = mean_ws_soir)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution de la vitesse du vent moyenne le soir",
x = "Vitesse du vent (m/s)",
y = "Nombre de jours") +
scale_x_continuous(breaks = seq(0, 20, by = 2)) +
theme_minimal()
print(a)
print(b)
print(c)
ggplot(df_meteoCO2, aes(x = ws, y = CO2_dry_corr_cal, color = wd)) +
geom_point() +
scale_color_viridis(option = "H")+
labs(title = "CO2 vs Vitesse du vent",
x = "Vitesse du vent (m/s)",
y = "CO2 (ppm)",
color = "Direction du vent (°)") +
ylim(350,600) +
theme_minimal()
ggplot(df_meteoCO2, aes(x = ws, y = CO2_dry_corr_cal, color = wd)) +
geom_point() +
scale_color_viridis(option = "H")+
labs(title = "CO2 vs Vitesse du vent",
x = "Vitesse du vent (m/s)",
y = "CO2 (ppm)",
color = "Direction du vent (°)") +
ylim(350,600) +
theme_minimal()
# pareil mùais si CO2 dans les 10% supérieurs on color en bleu et sinon en rouge
df_meteoCO2 <- df_meteoCO2 %>%
mutate(CO2_color = ifelse(CO2_dry_corr_cal > quantile(CO2_dry_corr_cal, 0.9, na.rm = TRUE), "high", "low"))
ggplot(df_meteoCO2, aes(x = ws, y = CO2_dry_corr_cal, color = CO2_color)) +
geom_point() +
scale_color_manual(values = c("high" = "blue", "low" = "red")) +
labs(title = "CO2 vs Vitesse du vent",
x = "Vitesse du vent (m/s)",
y = "CO2 (ppm)",
color = "CO2") +
ylim(350,600) +
theme_minimal()
ggplot(df_meteoCO2, aes(x = ws, y = CO2_dry_corr_cal, color = wd)) +
geom_point() +
scale_color_viridis(option = "H")+
labs(title = "CO2 vs Vitesse du vent",
x = "Vitesse du vent (m/s)",
y = "CO2 (ppm)",
color = "Direction du vent (°)") +
ylim(350,600) +
theme_minimal()
# pareil mùais si CO2 dans les 10% supérieurs on color en bleu et sinon en rouge
df_meteoCO2 <- df_meteoCO2 %>%
mutate(CO2_color = ifelse(CO2_dry_corr_cal > quantile(CO2_dry_corr_cal, 0.95, na.rm = TRUE), "high", "low"))
ggplot(df_meteoCO2, aes(x = ws, y = CO2_dry_corr_cal, color = CO2_color)) +
geom_point() +
scale_color_manual(values = c("high" = "blue", "low" = "red")) +
labs(title = "CO2 vs Vitesse du vent",
x = "Vitesse du vent (m/s)",
y = "CO2 (ppm)",
color = "CO2") +
ylim(350,600) +
theme_minimal()
ggplot(df_meteoCO2, aes(x = ws, y = CO2_dry_corr_cal, color = wd)) +
geom_point() +
scale_color_viridis(option = "H")+
labs(title = "CO2 vs Vitesse du vent",
x = "Vitesse du vent (m/s)",
y = "CO2 (ppm)",
color = "Direction du vent (°)") +
ylim(350,600) +
theme_minimal()
# pareil mùais si CO2 dans les 10% supérieurs on color en bleu et sinon en rouge
df_meteoCO2 <- df_meteoCO2 %>%
mutate(CO2_color = ifelse(CO2_dry_corr_cal > quantile(CO2_dry_corr_cal, 0.99, na.rm = TRUE), "high", "low"))
ggplot(df_meteoCO2, aes(x = ws, y = CO2_dry_corr_cal, color = CO2_color)) +
geom_point() +
scale_color_manual(values = c("high" = "blue", "low" = "red")) +
labs(title = "CO2 vs Vitesse du vent",
x = "Vitesse du vent (m/s)",
y = "CO2 (ppm)",
color = "CO2") +
ylim(350,600) +
theme_minimal()
ggplot(df_meteoCO2, aes(x = ws, y = CO2_dry_corr_cal, color = wd)) +
geom_point() +
scale_color_viridis(option = "H")+
labs(title = "CO2 vs Vitesse du vent",
x = "Vitesse du vent (m/s)",
y = "CO2 (ppm)",
color = "Direction du vent (°)") +
ylim(350,600) +
theme_minimal()
# pareil  mais avec une barre hz pour le quantile 0.9
ggplot(df_meteoCO2, aes(x = ws, y = CO2_dry_corr_cal, color = wd)) +
geom_point() +
scale_color_viridis(option = "H") +
labs(title = "CO2 vs Vitesse du vent",
x = "Vitesse du vent (m/s)",
y = "CO2 (ppm)",
color = "Direction du vent (°)") +
ylim(350,600) +
geom_hline(yintercept = quantile(df_meteoCO2$CO2_dry_corr_cal, probs = 0.9), linetype = "dashed", color = "red") +
theme_minimal()
ggplot(df_meteoCO2, aes(x = ws, y = CO2_dry_corr_cal, color = wd)) +
geom_point() +
scale_color_viridis(option = "H")+
labs(title = "CO2 vs Vitesse du vent",
x = "Vitesse du vent (m/s)",
y = "CO2 (ppm)",
color = "Direction du vent (°)") +
ylim(350,600) +
theme_minimal()
# pareil  mais avec une barre hz pour le quantile 0.9
ggplot(df_meteoCO2, aes(x = ws, y = CO2_dry_corr_cal, color = wd)) +
geom_point() +
scale_color_viridis(option = "H") +
labs(title = "CO2 vs Vitesse du vent",
x = "Vitesse du vent (m/s)",
y = "CO2 (ppm)",
color = "Direction du vent (°)") +
ylim(350,600) +
geom_hline(yintercept = quantile(df_meteoCO2$CO2_dry_corr_cal, probs = 0.9), linetype = "dashed", color = "black") +
theme_minimal()
a <- ggplot(df_meteoCO2, aes(x = ws, y = CO2_dry_corr_cal, color = wd)) +
geom_point() +
scale_color_viridis(option = "H")+
labs(title = "CO2 vs Vitesse du vent",
x = "Vitesse du vent (m/s)",
y = "CO2 (ppm)",
color = "Direction du vent (°)") +
ylim(350,600) +
theme_minimal()
print(a)
# pareil  mais avec une barre hz pour le quantile 0.9
a <- a +
geom_hline(yintercept = quantile(df_meteoCO2$CO2_dry_corr_cal, probs = 0.9), linetype = "dashed", color = "black")
a <- ggplot(df_meteoCO2, aes(x = ws, y = CO2_dry_corr_cal, color = wd)) +
geom_point() +
scale_color_viridis(option = "H")+
labs(title = "CO2 vs Vitesse du vent",
x = "Vitesse du vent (m/s)",
y = "CO2 (ppm)",
color = "Direction du vent (°)") +
ylim(350,600) +
theme_minimal()
print(a)
# pareil  mais avec une barre hz pour le quantile 0.9
a <- a +
geom_hline(yintercept = quantile(df_meteoCO2$CO2_dry_corr_cal, probs = 0.9), linetype = "dashed", color = "black")
print(a)
# on prend le quantile sup de CO2, en général, et on veut savoir quel mois contient le plus de valeurs dans le quantile max
quantile_sup <- quantile(df_meteoCO2$CO2_dry_corr_cal, probs = 0.9, na.rm = TRUE)
quantilesup <- df_meteoCO2 %>%
filter(CO2_dry_corr_cal > quantile_sup) %>%
group_by(month, saison) %>%
summarise(n = n(), .groups = 'drop') %>%
arrange(desc(n))
ggplot(quantilesup, aes(x = factor(month), y = n, fill = factor(saison))) +
geom_bar(stat = "identity") +
scale_fill_manual(values = saison_colors) +
labs(title = "Nombre d'observations de CO2 excédant le 90e percentile, par mois",
x = "Mois",
y = "Nombre de valeurs",
fill = "Saison") +
theme_minimal()
# et maintenant la distrib du  vent pour le quentile sup du CO2
df_quantile_sup <- df_meteoCO2 %>%
filter(CO2_dry_corr_cal > quantile_sup)
ggplot(df_quantile_sup, aes(x = ws, fill = saison)) +
geom_histogram(binwidth = 0.5, position = "identity", alpha = 0.7, color = "black") +
scale_fill_manual(values = saison_colors) +
labs(title = "Distribution de la vitesse du vent pour le quantile supérieur du CO2",
x = "Vitesse du vent (m/s)",
y = "Nombre d'observations",
fill = "Saison") +
theme_minimal()
# on prend le quantile sup de CO2, en général, et on veut savoir quel mois contient le plus de valeurs dans le quantile max
quantile_sup <- quantile(df_meteoCO2$CO2_dry_corr_cal, probs = 0.9, na.rm = TRUE)
quantilesup <- df_meteoCO2 %>%
filter(CO2_dry_corr_cal > quantile_sup) %>%
group_by(month, saison) %>%
summarise(n = n(), .groups = 'drop') %>%
arrange(desc(n))
ggplot(quantilesup, aes(x = factor(month), y = n, fill = factor(saison))) +
geom_bar(stat = "identity") +
scale_fill_manual(values = saison_colors) +
labs(title = "Nombre d'observations de CO2 excédant le 90e percentile, par mois",
x = "Mois",
y = "Nombre de valeurs",
fill = "Saison") +
theme_minimal()
# et maintenant la distrib du  vent pour le quentile sup du CO2
df_quantile_sup <- df_meteoCO2 %>%
filter(CO2_dry_corr_cal > quantile_sup)
ggplot(df_quantile_sup, aes(x = ws)) +
geom_histogram(binwidth = 0.5, position = "identity", alpha = 0.7, color = "black") +
labs(title = "Distribution de la vitesse du vent pour le quantile supérieur du CO2",
x = "Vitesse du vent (m/s)",
y = "Nombre d'observations") +
theme_minimal()
# on prend le quantile sup de CO2, en général, et on veut savoir quel mois contient le plus de valeurs dans le quantile max
quantile_sup <- quantile(df_meteoCO2$CO2_dry_corr_cal, probs = 0.9, na.rm = TRUE)
quantilesup <- df_meteoCO2 %>%
filter(CO2_dry_corr_cal > quantile_sup) %>%
group_by(month, saison) %>%
summarise(n = n(), .groups = 'drop') %>%
arrange(desc(n))
ggplot(quantilesup, aes(x = factor(month), y = n, fill = factor(saison))) +
geom_bar(stat = "identity") +
scale_fill_manual(values = saison_colors) +
labs(title = "Nombre d'observations de CO2 excédant le 90e percentile, par mois",
x = "Mois",
y = "Nombre de valeurs",
fill = "Saison") +
theme_minimal()
# et maintenant la distrib du  vent pour le quentile sup du CO2
df_quantile_sup <- df_meteoCO2 %>%
filter(CO2_dry_corr_cal > quantile_sup)
ggplot(df_quantile_sup, aes(x = ws)) +
geom_histogram(binwidth = 0.5, position = "identity", alpha = 0.7, color = "black") +
labs(title = "Distribution de la vitesse du vent pour le quantile supérieur du CO2",
x = "Vitesse du vent (m/s)",
y = "Nombre d'observations") +
theme_minimal()
# moy et é"cart type du vent pour le quantile sup du CO2
mean_ws_quantile_sup <- mean(df_quantile_sup$ws, na.rm = TRUE)
sd_ws_quantile_sup <- sd(df_quantile_sup$ws, na.rm = TRUE)
cat("Moyenne de la vitesse du vent pour le quantile supérieur du CO2 :", mean_ws_quantile_sup, "\n")
cat("Écart-type de la vitesse du vent pour le quantile supérieur du CO2 :", sd_ws_quantile_sup, "\n")
# on prend le quantile sup de CO2, en général, et on veut savoir quel mois contient le plus de valeurs dans le quantile max
quantile_sup <- quantile(df_meteoCO2$CO2_dry_corr_cal, probs = 0.99, na.rm = TRUE)
quantilesup <- df_meteoCO2 %>%
filter(CO2_dry_corr_cal > quantile_sup) %>%
group_by(month, saison) %>%
summarise(n = n(), .groups = 'drop') %>%
arrange(desc(n))
ggplot(quantilesup, aes(x = factor(month), y = n, fill = factor(saison))) +
geom_bar(stat = "identity") +
scale_fill_manual(values = saison_colors) +
labs(title = "Nombre d'observations de CO2 excédant le 99e percentile, par mois",
x = "Mois",
y = "Nombre de valeurs",
fill = "Saison") +
theme_minimal()
# et maintenant la distrib du  vent pour le quentile sup du CO2
df_quantile_sup <- df_meteoCO2 %>%
filter(CO2_dry_corr_cal > quantile_sup)
ggplot(df_quantile_sup, aes(x = ws)) +
geom_histogram(binwidth = 0.5, position = "identity", alpha = 0.7, color = "black") +
labs(title = "Distribution de la vitesse du vent pour le quantile supérieur du CO2",
x = "Vitesse du vent (m/s)",
y = "Nombre d'observations") +
theme_minimal()
# moy et é"cart type du vent pour le quantile sup du CO2
mean_ws_quantile_sup <- mean(df_quantile_sup$ws, na.rm = TRUE)
sd_ws_quantile_sup <- sd(df_quantile_sup$ws, na.rm = TRUE)
cat("Moyenne de la vitesse du vent pour le quantile supérieur du CO2 :", mean_ws_quantile_sup, "\n")
cat("Écart-type de la vitesse du vent pour le quantile supérieur du CO2 :", sd_ws_quantile_sup, "\n")
# on prend le quantile sup de CO2, en général, et on veut savoir quel mois contient le plus de valeurs dans le quantile max
quantile_sup <- quantile(df_meteoCO2$CO2_dry_corr_cal, probs = 0.99, na.rm = TRUE)
quantilesup <- df_meteoCO2 %>%
filter(CO2_dry_corr_cal > quantile_sup) %>%
group_by(month, saison) %>%
summarise(n = n(), .groups = 'drop') %>%
arrange(desc(n))
ggplot(quantilesup, aes(x = factor(month), y = n, fill = factor(saison))) +
geom_bar(stat = "identity") +
scale_fill_manual(values = saison_colors) +
labs(title = "Nombre d'observations de CO2 excédant le 99e percentile, par mois",
x = "Mois",
y = "Nombre de valeurs",
fill = "Saison") +
theme_minimal()
# et maintenant la distrib du  vent pour le quentile sup du CO2
df_quantile_sup <- df_meteoCO2 %>%
filter(CO2_dry_corr_cal > quantile_sup)
ggplot(df_quantile_sup, aes(x = ws)) +
geom_histogram(binwidth = 0.5, position = "identity", alpha = 0.7, color = "black") +
labs(title = "Distribution de la vitesse du vent pour le quantile supérieur du CO2",
x = "Vitesse du vent (m/s)",
y = "Nombre d'observations") +
theme_minimal()
# moy et é"cart type du vent pour le quantile sup du CO2
mean_ws_quantile_sup <- mean(df_quantile_sup$ws, na.rm = TRUE)
sd_ws_quantile_sup <- sd(df_quantile_sup$ws, na.rm = TRUE)
cat("Moyenne de la vitesse du vent pour le percentile supérieur du CO2 :", mean_ws_quantile_sup, "\n")
cat("Écart-type de la vitesse du vent pour le percentile supérieur du CO2 :", sd_ws_quantile_sup, "\n")
# on prend le quantile sup de CO2, en général, et on veut savoir quel mois contient le plus de valeurs dans le quantile max
quantile_sup <- quantile(df_meteoCO2$CO2_dry_corr_cal, probs = 0.99, na.rm = TRUE)
quantilesup <- df_meteoCO2 %>%
filter(CO2_dry_corr_cal > quantile_sup) %>%
group_by(month, saison) %>%
summarise(n = n(), .groups = 'drop') %>%
arrange(desc(n))
ggplot(quantilesup, aes(x = factor(month), y = n, fill = factor(saison))) +
geom_bar(stat = "identity") +
scale_fill_manual(values = saison_colors) +
labs(title = "Nombre d'observations de CO2 excédant le 99e percentile, par mois",
x = "Mois",
y = "Nombre de valeurs",
fill = "Saison") +
theme_minimal()
# et maintenant la distrib du  vent pour le quentile sup du CO2
df_quantile_sup <- df_meteoCO2 %>%
filter(CO2_dry_corr_cal > quantile_sup)
ggplot(df_quantile_sup, aes(x = ws)) +
geom_histogram(binwidth = 0.2, position = "identity", alpha = 0.7, color = "black") +
labs(title = "Distribution de la vitesse du vent pour le quantile supérieur du CO2",
x = "Vitesse du vent (m/s)",
y = "Nombre d'observations") +
theme_minimal()
# moy et é"cart type du vent pour le quantile sup du CO2
mean_ws_quantile_sup <- mean(df_quantile_sup$ws, na.rm = TRUE)
sd_ws_quantile_sup <- sd(df_quantile_sup$ws, na.rm = TRUE)
cat("Moyenne de la vitesse du vent pour le percentile supérieur du CO2 :", mean_ws_quantile_sup, "\n")
cat("Écart-type de la vitesse du vent pour le percentile supérieur du CO2 :", sd_ws_quantile_sup, "\n")
a <- ggplot(df_meteoCO2, aes(x = ws, y = CO2_dry_corr_cal, color = wd)) +
geom_point() +
scale_color_viridis(option = "H")+
labs(title = "CO2 vs Vitesse du vent",
x = "Vitesse du vent (m/s)",
y = "CO2 (ppm)",
color = "Direction du vent (°)") +
ylim(350,600) +
theme_minimal()
print(a)
# pareil  mais avec une barre hz pour le quantile 0.9
a <- a +
geom_hline(yintercept = quantile(df_meteoCO2$CO2_dry_corr_cal, probs = 0.99), linetype = "dashed", color = "black")
print(a)
df_vent_faible$day_cat <- df_vent_faible %>%
mutate(cat_wind = case_when(
mean_ws < 2 ~ "inf2",
mean_ws >= 2 & mean_ws < 4 ~ "2-4",
mean_ws >= 4 ~ "sup4"
))
df_vent_faible$matin_cat <- df_vent_faible%>%
mutate(cat_wind = case_when(
mean_ws_matin < 2 ~ "inf2",
mean_ws_matin >= 2 & mean_ws_matin < 4 ~ "2-4",
mean_ws_matin >= 4 ~ "sup4"
))
df_vent_faible$soir_cat <- df_vent_faible %>%
mutate(cat_wind = case_when(
mean_ws_soir < 2 ~ "inf2",
mean_ws_soir >= 2 & mean_ws_soir < 4 ~ "2-4",
mean_ws_soir >= 4 ~ "sup4"
))
View(df_vent_faible)
# on moyenne le vent par jour sur toutes les heures y compris celles pour lesquelles y a un flag puis pour les heures pour lesquelles flag_dn == "matin" ou "soir" et on met tout ça dans un df
df_vent_faible <- df_meteoCO2 %>%
group_by(date = as.Date(date)) %>%
summarise(mean_ws = mean(ws, na.rm = TRUE), .groups = "drop")
df_vent_faible_matin <- df_meteoCO2 %>%
filter(flag_dn == "matin") %>%
group_by(date = as.Date(date)) %>%
summarise(mean_ws_matin = mean(ws, na.rm = TRUE), .groups = "drop")
df_vent_faible_soir <- df_meteoCO2 %>%
filter(flag_dn == "soir") %>%
group_by(date = as.Date(date)) %>%
summarise(mean_ws_soir = mean(ws, na.rm = TRUE), .groups = "drop")
df_vent_faible <- df_vent_faible %>%
left_join(df_vent_faible_matin, by = "date") %>%
left_join(df_vent_faible_soir, by = "date")
rm(df_vent_faible_matin, df_vent_faible_soir) # on supprime les df intermédiaires
# histogramme simple
a <- ggplot(df_vent_faible, aes(x = mean_ws)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution de la vitesse du vent moyenne par jour",
x = "Vitesse du vent (m/s)",
y = "Nombre de jours") +
scale_x_continuous(breaks = seq(0, 20, by = 2)) +
theme_minimal()
b <- ggplot(df_vent_faible, aes(x = mean_ws_matin)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution de la vitesse du vent moyenne le matin",
x = "Vitesse du vent (m/s)",
y = "Nombre de jours") +
scale_x_continuous(breaks = seq(0, 20, by = 2)) +
theme_minimal()
c <- ggplot(df_vent_faible, aes(x = mean_ws_soir)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution de la vitesse du vent moyenne le soir",
x = "Vitesse du vent (m/s)",
y = "Nombre de jours") +
scale_x_continuous(breaks = seq(0, 20, by = 2)) +
theme_minimal()
print(a)
print(b)
print(c)
df_vent_faible <- df_vent_faible %>%
mutate(cat_day = case_when(
mean_ws < 2 ~ "inf2",
mean_ws >= 2 & mean_ws < 4 ~ "2-4",
mean_ws >= 4 ~ "sup4"
))
df_vent_faible <- df_vent_faible%>%
mutate(cat_matin = case_when(
mean_ws_matin < 2 ~ "inf2",
mean_ws_matin >= 2 & mean_ws_matin < 4 ~ "2-4",
mean_ws_matin >= 4 ~ "sup4"
))
df_vent_faible <- df_vent_faible %>%
mutate(cat_soir = case_when(
mean_ws_soir < 2 ~ "inf2",
mean_ws_soir >= 2 & mean_ws_soir < 4 ~ "2-4",
mean_ws_soir >= 4 ~ "sup4"
))
View(df_vent_faible)
# on sauvegarde les jours de vent faible, séparément jour entier, matin et soir, en sékectionnant juste la date, là où vent inf à 4m
df_vent_faible %>%
filter(mean_ws < 4) %>%
select(date) %>%
write_csv("data/processed/jours_vent_faible_LCP.csv")
df_vent_faible %>%
filter(mean_ws_matin < 4) %>%
select(date) %>%
write_csv("data/processed/jours_vent_faible_matin_LCP.csv")
df_vent_faible %>%
filter(mean_ws_soir < 4) %>%
select(date) %>%
write_csv("data/processed/jours_vent_faible_soir_LCP.csv")
# on crée un dataset avec les 3
df_meteoCO2 <- ERA5land %>%
select (date, flag_dn, saison, windu, windv, ws, wd, t2m, ssrd, surfacepressure, totalprecipitation) %>%
left_join(CO2, by = "date") %>%
mutate(saison = factor(saison, levels = c("DJF", "MAM", "JJA", "SON"))) %>% # pour ERA5 on joint que ablh et relative humidity
left_join(ERA5 %>% select(date, relative_humidity, ablh), by = "date")
# on print le nombre de jours où on a CO2_dry_corr_cal
# on filtre les valeurs manquantes
df_meteoCO2 <- df_meteoCO2 %>%
filter(!is.na(windu) & !is.na(windv) & !is.na(ws) & !is.na(wd) & !is.na(t2m) &
!is.na(ssrd) & !is.na(surfacepressure) & !is.na(relative_humidity) &
!is.na(ablh) & !is.na(CO2_dry_corr_cal))
# on crée un dataset avec les 3
df_meteoCO2 <- ERA5land %>%
select (date, flag_dn, saison, windu, windv, ws, wd, t2m, ssrd, surfacepressure, totalprecipitation) %>%
left_join(CO2, by = "date") %>%
mutate(saison = factor(saison, levels = c("DJF", "MAM", "JJA", "SON"))) %>% # pour ERA5 on joint que ablh et relative humidity
left_join(ERA5 %>% select(date, relative_humidity, ablh), by = "date")
cat("Nombre de jours avec CO2_dry_corr_cal :", nrow(df_meteoCO2 %>% filter(!is.na(CO2_dry_corr_cal))), "\n")
# on filtre les valeurs manquantes
df_meteoCO2 <- df_meteoCO2 %>%
filter(!is.na(windu) & !is.na(windv) & !is.na(ws) & !is.na(wd) & !is.na(t2m) &
!is.na(ssrd) & !is.na(surfacepressure) & !is.na(relative_humidity) &
!is.na(ablh) & !is.na(CO2_dry_corr_cal))
# on crée un dataset avec les 3
df_meteoCO2 <- ERA5land %>%
select (date, flag_dn, saison, windu, windv, ws, wd, t2m, ssrd, surfacepressure, totalprecipitation) %>%
left_join(CO2, by = "date") %>%
mutate(saison = factor(saison, levels = c("DJF", "MAM", "JJA", "SON"))) %>% # pour ERA5 on joint que ablh et relative humidity
left_join(ERA5 %>% select(date, relative_humidity, ablh), by = "date")
saveRDS(df_meteoCO2, "data/processed/df_meteoCO2_LCP.rds")
# on filtre les valeurs manquantes
df_meteoCO2 <- df_meteoCO2 %>%
filter(!is.na(windu) & !is.na(windv) & !is.na(ws) & !is.na(wd) & !is.na(t2m) &
!is.na(ssrd) & !is.na(surfacepressure) & !is.na(relative_humidity) &
!is.na(ablh) & !is.na(CO2_dry_corr_cal))
